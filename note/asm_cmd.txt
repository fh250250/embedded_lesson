数据传送指令:
1. mov r0, N		r0 = N
	合法立即数：该数可以由一个小于或等于255的数，循环右移偶数位得到

2. mvn r0, N		r0 = ~N

3. mrs r0, cpsr		r0 = cpsr
   msr cpsr, r0		cpsr = r0

4. mrc
   mcr

运算指令：
1. add r0, r1, N		r0 = r1 + N
   add r0, N			r0 += N
   
   adds 影响cpsr
   adc r0, r1, N		r0 = r1 + N + cpsr.C

2. sub r0, r1, N		r0 = r1 - N
   sub r0, N			r0 -= N
   
   subs 影响cpsr
   sbc r0, r1, N		r0 = r1 - N - ~cpsr.C

3. mul r0, r1, r2		r0 = r1 * r2


比较指令：
1. cmp r0, N			r0 - N

   条件码：
   		eq	==	Z
		ne	!=	Z
		gt	>	N Z
		lt	<	N
		le	<=	N Z
		ge	>=	N Z

2. tst r0, N		r0 & N

3. teq r0, N		r0 ^ N


位操作指令 & | ^

#define s(m,n)  m&~(1<<n)
#define s(m,n)  m|(1<<n)
#define s(m,n)  m^(1<<n)

1. and r0, r1, N		r0 = r1 & N
   and r0, N			r0 &= N

2. orr r0, r1, N		r0 = r1 | N
   orr r0, N			r0 |= N

3. eor r0, r1, N		r0 = r1 ^ N
   eor r0, N			r0 ^= N

4. 位清楚指令
   bic r0, r1, N		r0 = r1 & (~N)


移位指令：

1. lsl r0, r1, N		r0 = r1 << N
   mov r0, r1, lsl N	r0 = r1 << N
   add r0, r1, r2, lsl N	r0 = r1 + (r2 << N)

2. lsr r0, r1, N		r0 = r1 >> N

3. asr r0, r1, N		算术右移

4. ror r0, r1, N		循环右移



系统调用函数：

write --> syscall --> swi/svc

	swi/svc no

	参数：r0~r3 超过4个的放入栈
	返回值：r0


分支指令：

b  label
bl label 会将返回地址保存到lr中


APCS:
	1. 参数:  r0~r3 超过的参数放入栈,并且最后一个参数先入栈
	2. 栈类型：C fd 满减栈
	3. 返回值放到r0
	

栈的操作指令：(fd)
push {r0,r1,r3-r5}		大号寄存器的数据先入栈
pop  {r1,r2,r5-r7}		高地址的数据放到大号寄存器中
